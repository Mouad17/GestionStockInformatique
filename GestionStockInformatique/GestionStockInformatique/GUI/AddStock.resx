<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACs
        BgAAAk1TRnQBSQFMAwEBAAEgAQABIAEAARABAAEQAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABQAMA
        ARADAAEBAQABIAYAARA+AAFNAU4BTQGZAUwBXgFLAcwBTQFOAU0BmfQAAU4BYgFLAcwBJwHfARYB/wFO
        AWIBSwHMzAACTAFOAZMBUAFXAV8BxQFQAVcBXwHFAVABVwFfAcUBUAFXAV8BxQFQAVcBXwHFAVABVwFf
        AcUBUAFXAV8BxQEyAWgBSAHpASQBdwErAfQBJAF3ASsB9AE5AeIBKAH/ASQBdwErAfQBMwFxATkB6gFN
        AVABTQGZxAABUAFWAV0BuAF3Aa4B4AH/AXYBrQHfAf8BdgGtAd8B/wF2Aa0B3wH/AXYBrQHfAf8BdgGt
        Ad8B/wF2Aa0B3wH/ASEBmgEpAf8BTgHnAT0B/wFOAecBPQH/AU4B5wE9Af8BTgHnAT0B/wFOAecBPQH/
        AU4BZgFLAczEAAFRAVQBVwGrAYEBtAHkAf8BeQGwAeEB/wF5AbAB4QH/AXkBsAHhAf8BeQGwAeEB/wF5
        AbAB4QH/AXkBsAHhAf8BOQGlAVcB/wEjAaEBKQH/ASMBoQEpAf8BYgHrAVEB/wEkAaIBKgH/AS4BfgEz
        Ae8BTQFQAU0BmcQAAU8BVAFWAaYBiAG7AeoB/wGCAbUB5QH/AYIBtQHlAf8BggG1AeUB/wGCAbUB5QH/
        AYIBtQHlAf8BggG1AeUB/wGCAbUB5QH/AYIBtQHlAf8BJgGnASoB/wFxAe4BYAH/AScBqQErAf8BTwFU
        AVYBpsgAAU4BUgFUAaMBjwHCAe4B/wGHAboB6QH/AYcBugHpAf8BhwG6AekB/wGHAboB6QH/AYcBugHp
        Af8BhwG6AekB/wGHAboB6QH/AYcBugHpAf8BPwGwAVkB/wEoAawBKwH/AUQBtQFdAf8BTgFSAVQBo8gA
        AU4BUQFTAZ8BlgHJAfIB/wGMAb8B7AH/AYwBvwHsAf8BjAG/AewB/wFAAXMBqgH/AYwBvwHsAf8BQAFz
        AaoB/wGMAb8B7AH/AYwBvwHsAf8BjAG/AewB/wGMAb8B7AH/AZYByQHyAf8BTgFRAVMBn8gAAU4BUAFS
        ApsBzgH2Af8BkQHEAfAB/wGRAcQB8AH/AZEBxAHwAf8BUQGIAbsB/wFAAXMBqgH/AVEBiAG7Af8BPAFv
        AaYB/wGRAcQB8AH/AZEBxAHwAf8BkQHEAfAB/wGbAc4B9gH/AU4BUAFSAZvIAAFNAU4BUAGYAZ8B0gH5
        Af8BlQHIAfMB/wGVAcgB8wH/AZUByAHzAf8BUQGIAbsB/wFRAYgBuwH/AVEBiAG7Af8BSQGAAbMB/wGV
        AcgB8wH/AZUByAHzAf8BlQHIAfMB/wGfAdIB+QH/AU0BTgFQAZjIAAFNAU4BTwGVAacB0AHzAf0BqgHd
        Av8BqgHdAv8BqgHdAv8BcwGqAd0B/wFzAaoB3QH/AXMBqgHdAf8BYgGZAcwB/wGqAd0C/wGqAd0C/wGq
        Ad0C/wGnAdAB8wH9AU0BTgFPAZXIAAM/AW0BZAF7AYwB4AGAAbMB5gH/AYABswHmAf8BgAGzAeYB/wFK
        AYEBtAH/AUoBgQG0Af8BSgGBAbQB/wFEAXcBrgH/AYABswHmAf8BgAGzAeYB/wGAAbMB5gH/AWQBewGM
        AeADPwFtyAADLgFHAVgBYQFrAcQBiQG8Ae8B/wGIAbsB7gH/AYgBuwHuAf8BPQFwAacB/wE9AXABpwH/
        AT0BcAGnAf8BOgFtAaQB/wGIAbsB7gH/AYgBuwHuAf8BiQG8Ae8B/wFYAWEBawHEAy4BR8gAAxkBIwFP
        AVMBVgGlAYkBvAHvAf8BiAG7Ae4B/wGIAbsB7gH/ATEBZAGbAf8BMQFkAZsB/wExAWQBmwH/ATEBZAGb
        Af8BiAG7Ae4B/wGIAbsB7gH/AYkBvAHvAf8BTwFTAVYBpQMZASPIAAMDAQQBPAI9AWgBSQFKAUsBiwFJ
        AUoBSwGLAUkBSgFLAYsBSwFWAWIBzAFLAVYBYgHMAUsBVgFiAcwBSwFWAWIBzAFJAUoBSwGLAUkBSgFL
        AYsBSQFKAUsBiwE8Aj0BaAMDAQT/AMUAAUIBTQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcA
        A/8BAAH/AeMGAAH/AeMGAAGABwABgAcAAYAHAAGAAQEGAAGAAQEGAAGAAQEGAAGAAQEGAAGAAQEGAAGA
        AQEGAAGAAQEGAAGAAQEGAAGAAQEGAAGAAQEGAAL/BgAL
</value>
  </data>
</root>